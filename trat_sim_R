library(mise)
print('teste')
mise()
plot('x') 
gc()
rm(list = ls())
library(dplyr)


#CARREGA SEQUENCIA DE LINGOTAMENTO--------------------------------------------------------------------------------------
BD = 'D:/Agrupamento LG/seq_ling.txt'
seqling <- read.table(file = BD, header = TRUE, sep='\t',dec = ".", stringsAsFactors = FALSE)
seqling$seqid<-1:NROW(seqling)
head(seqling)

#CARREGA PADCST SGF-----------------------------------------------------------------------------------------------------
BD = 'D:/Agrupamento LG/pad_sgf.txt'
pad_sfg <- read.table(file = BD, header = TRUE, sep='\t',dec = ".", stringsAsFactors = FALSE)
head(pad_sfg)

#Uniao para agrupamento de larguras e SGF------------------------------------------------------------------------------
seqling<-merge(seqling,pad_sfg,by.x = 'PdCST',by.y = 'cd_pdcst_placa')

proposta_agrupamento<-'LTQ'

if(proposta_agrupamento=='LTQ'){
  seqling$grupo_aco<-ifelse(seqling$SGF==1,'UBC01',
                            ifelse(seqling$SGF==2,'UBC02',
                                   ifelse(seqling$SGF %in% c(19,20),'UBC',
                                          ifelse(seqling$SGF==3,'BC03',
                                                 ifelse(seqling$SGF %in% c(9,10,6,27,17,18,30,34),'BC',
                                                        ifelse(seqling$SGF==31,'Q7',
                                                               ifelse(seqling$SGF %in% c(41,07,29,14,33,13),'BS',
                                                                      ifelse(seqling$SGF %in% c(38,43),'TRIP','DEMAIS'))))))))
}else{
  seqling$grupo_aco<-ifelse(seqling$cd_facc %in% c(10,11),'UBC',
                            ifelse(seqling$cd_facc %in% c(20,23),'BC',
                                  ifelse(seqling$SGF==31,'Q7',
                                        ifelse(seqling$SGF %in% c(41,07,29,14,33,13),'BS',
                                              ifelse(seqling$SGF %in% c(38,43),'TRIP','DEMAIS')))))

  seqling$SGF<-ifelse(seqling$grupo_aco=='UBC',19,seqling$SGF)  
  seqling$SGF<-ifelse(seqling$grupo_aco=='BC',10,seqling$SGF)  
}


unique(seqling$SGF)
unique(seqling$grupo_aco)
seqling$SGF<-ifelse(seqling$grupo_aco=='DEMAIS',0,seqling$SGF)

#agregação sgf e lg----------------------------------------------------------------------------------------------------
sgf_lg<-aggregate(Placao ~  grupo_aco + LGBQ,seqling,FUN=length)
sgf_lg<-sgf_lg[order(sgf_lg[,'grupo_aco'],sgf_lg[,'LGBQ']),]
names(sgf_lg)[names(sgf_lg) =='Placao']<-'Peso'
names(sgf_lg)[names(sgf_lg) =='LGBQ']<-'lg_infln_bq'

#coloca o volume do BC também nos demais, melhorando o resultado de troca de distribuidor
# if(proposta_agrupamento!='LTQ'){
#   temp<-sgf_lg 
#   temp$grupo_aco<-ifelse(temp$grupo_aco=='BC','DEMAIS',temp$grupo_aco)
#   temp<-aggregate(Peso ~  grupo_aco + lg_infln_bq,temp,FUN=sum)
#   sgf_lg<-rbind(sgf_lg[sgf_lg$grupo_aco!='DEMAIS',],temp[temp$grupo_aco=='DEMAIS',])  
# }



#SALVA O ARQUIVO PARA PROCESSAMENTO------------------
write.table(sgf_lg, file="D:/Agrupamento LG/Geral.txt",row.names=F,sep='\t',dec = ".")

#Uniao da tabela da sequencia de lingotamento descasando a linha-----------------------------------------------

seqling2<-seqling
seqling2$seqid<-seqling2$seqid-1
for (nome in names(seqling2)){names(seqling2)[names(seqling2) ==nome]<-paste0(nome,'_post')}

#JOIN COM LINHAS DESCASADAS
seqlingfim<- merge(seqling,seqling2, by.x = "seqid" , by.y = "seqid_post")
str(seqlingfim)

#GARANTE QUE AS LINHAS SÃO DE FATO CONSECUTIVAS
seqlingfim<-seqlingfim[seqlingfim[,'Veio']==seqlingfim[,'Veio_post'] & 
                         seqlingfim[,'Cod_seq']==seqlingfim[,'Cod_seq_post'],]


#CARREGAMENTO PARA PREPARAR TABELA DO PADRÃO COM LARGURAS DE BQ-----------------------------------------------
BD = 'D:/Agrupamento LG/otimizado_processado_geral.csv'
dataset <- read.table(file = BD, header = TRUE, sep=';',dec = ".", stringsAsFactors = FALSE)

head(dataset)

#Grupos dos aços distintos
sgf_distintos<-unique(dataset$sgf_ini)

df_consolidado<-data.frame(lg_real=0,lgplacao=0,lgmin=0,lgmax=0,sgf=0)
df_temp<-df_consolidado
df_consolidado<-df_consolidado[df_consolidado>0,]
for(aco in sgf_distintos){
  temp_otimizado<-dataset[dataset[,9]==aco,c(1,2,3,9)]

  for(lg_placao in temp_otimizado[,1]){
    temp_lgplacao<-temp_otimizado[temp_otimizado[,1]==lg_placao,1]
    temp_lgmin<-temp_otimizado[temp_otimizado[,1]==lg_placao,2]
    temp_lgmax<-temp_otimizado[temp_otimizado[,1]==lg_placao,3]
    temp_sgf<-temp_otimizado[temp_otimizado[,1]==lg_placao,4]
    
    for(lg_real in temp_lgmin:temp_lgmax){
      df_temp$lg_real<-lg_real
      df_temp$lgplacao<-temp_lgplacao
      df_temp$lgmin<-temp_lgmin
      df_temp$lgmax<-temp_lgmax
      df_temp$sgf<-temp_sgf
      df_consolidado<-rbind(df_consolidado,df_temp)
    }
  }
}
write.table(df_consolidado, file="D:/Agrupamento LG/tabela_largura.csv",row.names=FALSE,sep=";")

BD = 'D:/Agrupamento LG/tabela_largura.csv'
df_consolidado <- read.table(file = BD, header = TRUE, sep=';',dec = ".", stringsAsFactors = FALSE)
sgf_distintos<-unique(df_consolidado$sgf)


#uniao do df_consolidado com a sequencia de lingotamento----------------------------------------------------------------
df_consolidado$chave<-paste0(df_consolidado$sgf,';',df_consolidado$lg_real)
head(df_consolidado)

seqlingfim$chave1<-paste0(seqlingfim$SGF,';',seqlingfim$LGBQ)
seqlingfim$chave2<-paste0(seqlingfim$SGF_post,';',seqlingfim$LGBQ_post)
seqlingfim$id_mix<-ifelse(seqlingfim$PdCST!=seqlingfim$PdCST_post,1,0)
seqlingfim$id_TD<-ifelse(seqlingfim$SeqCorr!=seqlingfim$SeqCorr_post,1,0)
head(seqlingfim)

#JOIN DO 1 PADRAO COM df_consolidado
seqlingfim<- merge(seqlingfim,df_consolidado, by.x = "chave1" , by.y = "chave")

#JOIN DO 2 PADRAO COM df_consolidado
seqlingfim<- merge(seqlingfim,df_consolidado, by.x = "chave2" , by.y = "chave")


resultados<-seqlingfim
head(seqlingfim)
unique(seqlingfim[,'grupo_aco'])


#Filtros de análise------------------
vetor<-resultados$lgplacao.x>0
vetor<-resultados$lgplacao.x!=resultados$lgplacao.y
vetor<-resultados$lgplacao.x!=resultados$lgplacao.y & resultados$lg_infln_placa==resultados$lg_infln_placa_post
vetor<-grepl('Q7',resultados[,'grupo_aco'])
#Filtros de análise------------------

campos<-c('DT.ling.','Placao','Placao_post','PdCST','PdCST_post','SGF','SGF_post','lg_infln_placa','lg_infln_placa_post','lgplacao.x','lgplacao.y','LGBQ','LGBQ_post','grupo_aco','grupo_aco_post','cd_facc','cd_facc_post','id_mix','id_TD')
resultados<-seqlingfim[vetor,campos]
TOTAL<-NROW(resultados)

sum(resultados$lgplacao.x!=resultados$lgplacao.y)
sum(resultados$lg_infln_placa!=resultados$lg_infln_placa_post)

mean(abs(resultados$lgplacao.x-resultados$lgplacao.y))
mean(abs(resultados$lg_infln_placa-resultados$lg_infln_placa_post))

mean(ifelse(abs(resultados$lgplacao.x-resultados$lgplacao.y)<=40,1,0))
mean(ifelse(abs(resultados$lg_infln_placa-resultados$lg_infln_placa_post)<=40,1,0))

mean(resultados$lgplacao.x)
mean(resultados$lg_infln_placa)



TEMP<-aggregate(Placao ~  grupo_aco + grupo_aco_post,resultados,FUN=length)
TEMP[,3]<-round(TEMP[,3]/TOTAL,3)
TEMP<-TEMP[order(-TEMP[,3]),]
print(TEMP)
print(sum(TEMP[,3]))

TEMP<-aggregate(Placao ~  cd_facc + cd_facc_post,resultados,FUN=length)
TEMP[,3]<-round(TEMP[,3]/TOTAL,3)
TEMP<-TEMP[order(-TEMP[,3]),]
print(TEMP)
print(sum(TEMP[,3]))

TEMP<-aggregate(id_mix ~  grupo_aco + grupo_aco_post,resultados,FUN=sum)
TEMP[,3]<-round(TEMP[,3]/TOTAL,3)
TEMP<-TEMP[order(-TEMP[,3]),]
print(TEMP)
print(sum(TEMP[,3]))

TEMP<-aggregate(id_TD ~  grupo_aco + grupo_aco_post,resultados,FUN=sum)
TEMP[,3]<-round(TEMP[,3]/TOTAL,3)
TEMP<-TEMP[order(-TEMP[,3]),]
print(TEMP)
print(sum(TEMP[,3]))



#Verificar as diferenças entre o padrão e a proposta
write.table(resultados, file="seq_simulado4.csv",row.names=FALSE,sep=";")


